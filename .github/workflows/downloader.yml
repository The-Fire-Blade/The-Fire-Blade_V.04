# https://github.com/tsedlar
name: CI

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: '25 19 * * *'
jobs:
  update_gamepack:
    runs-on: ubuntu-latest
    container:
      # image with AdoptOpenJDK 8 and git installed
      image: mahabal/adoptopenjdk8-git:latest

    steps:
      - uses: actions/checkout@v1.2.0
        with:
          ref: ${{ github.ref }}
      - name: Deploy gamepack
        run: |

          mkdir -p jav_configs
          mkdir -p world_list
          cd gamepacks/

          curl -sL https://github.com/runetech/osrs-gamepack-downloader/releases/download/v1.3/osrs-gamepack-downloader.jar -o downloader.jar

          REPO=$(echo ${{ github.repository }} | sed "s:.*/::")
          BRANCH=$(echo ${{ github.ref }} | sed "s:.*/::")

          git remote rm origin
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
          git config user.name ${{ github.actor }}
          git config user.email noreply@${{ github.actor }}.noreply.github.com

          JAV_CONFIG=$(java -jar downloader.jar -p --dry-run)
          OSRS_REV=$(java -jar downloader.jar -r)

          rm -f downloader.jar

          git add .
          git diff-index --quiet HEAD || GIT_AUTHOR_DATE=\"$(date -ur osrs-${OSRS_REV}.jar)\" GIT_COMMITTER_DATE=\"$(date -ur osrs-${OSRS_REV}.jar)\" git commit -am "Add osrs-${OSRS_REV}.jar" && git push origin HEAD:${BRANCH}

          cd ../jav_configs
          
          echo "${JAV_CONFIG}" > jav_config_${OSRS_REV}.ws
          
          git add .
          git diff-index --quiet HEAD || git commit -am "Add jav_config.ws for osrs-${OSRS_REV}.jar" && git push origin HEAD:${BRANCH}
          
          cd ../world_list
          line=$(echo "${JAV_CONFIG}" | grep param_17); WORLD_LIST_URL=${line#"param_17="};
          curl -sL $WORLD_LIST_URL -o slr.ws
          
          git add .
          git diff-index --quiet HEAD || git commit -am "Update world list for for osrs-${OSRS_REV}.jar" && git push origin HEAD:${BRANCH}

  gamepacks-build:
    runs-on: ubuntu-latest
    needs: update_gamepack
    strategy:
      matrix:
        python-version: [3.5,3.6,3.7,3.8,3.9]
      fail-fast: false 
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install requests 
    - name: Test without log
      run: |
        python test.py  -s > /dev/null 2>&1

